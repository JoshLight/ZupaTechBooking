//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BookingSystem.DataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BookingSystemEntities : DbContext
    {
        public BookingSystemEntities()
            : base("name=BookingSystemEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Booking> Bookings { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Seat> Seats { get; set; }
    
        public virtual ObjectResult<GetAvailableSeats_Result> GetAvailableSeats(Nullable<System.DateTime> bookingDate)
        {
            var bookingDateParameter = bookingDate.HasValue ?
                new ObjectParameter("BookingDate", bookingDate) :
                new ObjectParameter("BookingDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAvailableSeats_Result>("GetAvailableSeats", bookingDateParameter);
        }
    
        public virtual ObjectResult<GetCustomerDetails_Result> GetCustomerDetails(string customerName, string customerEmail)
        {
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var customerEmailParameter = customerEmail != null ?
                new ObjectParameter("CustomerEmail", customerEmail) :
                new ObjectParameter("CustomerEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerDetails_Result>("GetCustomerDetails", customerNameParameter, customerEmailParameter);
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> GetSeatIds(string row, string column)
        {
            var rowParameter = row != null ?
                new ObjectParameter("row", row) :
                new ObjectParameter("row", typeof(string));
    
            var columnParameter = column != null ?
                new ObjectParameter("column", column) :
                new ObjectParameter("column", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("GetSeatIds", rowParameter, columnParameter);
        }
    }
}
